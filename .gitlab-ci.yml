# Define variables for the pipeline
variables:
  DOCKER_HOST: tcp://localhost:2375

# Define stages for the pipeline
stages:
  - build_frontend
  - build_backend
  - test_frontend
  - test_backend
  - deploy_frontend
  - deploy_backend

# Frontend build stage
build_frontend:
  image: node:20
  stage: build_frontend
  before_script:
    - cd Insurance-In-Review
  script:
    - npm install
    - npm run build

# Backend build stage
build_backend:  
  image: golang:1.20
  stage: build_backend
  before_script:
    - cd API/cmd 
  script:
    - go build

# Frontend test stage
test_frontend:
  image: node:20
  stage: test_frontend
  before_script:
    - cd Insurance-In-Review
  script:
    - echo "Running tests..."
    - npm install
    - npm test ./...

# Backend test stage
test_backend:
  image: golang:1.20
  stage: test_backend
  before_script:
    - cd API
  script:
    - echo "Running tests..."
    - go test ./...

# Frontend deployment stage
deploy_frontend:
  image: docker:26
  stage: deploy_frontend
  before_script:
   - cd Insurance-In-Review
  script:
    - echo "Deploying the frontend application..."
    - docker build -t repository.hal.davecutting.uk:5005/40297190/insurify-frontend -f docker/Dockerfile . 
    - docker push repository.hal.davecutting.uk:5005/40297190/insurify-frontend
  only:
    - production # Only deploy when changes are pushed to the production branch

# Backend deployment stage
deploy_backend:
  image: docker:26
  stage: deploy_backend
  before_script:
  - cd API
  script:
    - echo "Deploying the backend application..."
    - docker build -t gcr.io/insurify-419221/insurify-backend -f docker/Dockerfile . 
    - docker push gcr.io/insurify-419221/insurify-backend 
  only:
    - production # Only deploy when changes are pushed to the production branch

